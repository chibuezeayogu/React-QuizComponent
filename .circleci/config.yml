# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
defaults: &defaults
  working_directory: ~/reactQuizComponent
  docker:
    # specify the version you desire here
    - image: circleci/node:7.10

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
  
  frontend-tests:
    <<: *defaults
    steps:
      - checkout 
      - attach_workspace:
          at: ~/reactQuizComponent/tmp
      - run: npm install
      # run tests!
      - run:
          name: Run tests
          command: |
            npm test
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.json coverage/lcov.info
      - persist_to_workspace:
          root: tmp
          paths: 
            - codeclimate.json
  
  upload-coverage:
    <<: *defaults
    environment: 
      - CC_TEST_REPORTER_ID: 26397d26bf669948f8d28fdf504628a0d355e0e59ebaed1dabb0dffd59edc2be
    steps:
      - attach_workspace:
          at: ~/reactQuizComponent/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.json

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - frontend-tests:
          requires:
            - build
      - upload-coverage:
          requires:
             - frontend-tests